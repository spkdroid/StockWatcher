name: Distribute Compose App

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [android, desktop]
        include:
          - target: android
            gradle_task: assembleRelease
            artifact_name: app-release.apk
            artifact_path: app/build/outputs/apk/release/app-release.apk
          - target: desktop
            gradle_task: packageRelease
            artifact_name: app-desktop.zip
            artifact_path: app/build/distributions/app-desktop.zip

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up JDK
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      # Set up caching for Gradle
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}

      # Build the application
      - name: Build for ${{ matrix.target }}
        run: ./gradlew ${{ matrix.gradle_task }}

      # Upload artifacts
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{ matrix.artifact_path }}

  distribute:
    runs-on: ubuntu-latest
    needs: build-and-distribute
    steps:
      # Download all artifacts
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      # Example distribution step
      - name: Distribute artifacts
        run: |
          echo "Distributing artifacts..."
          ls artifacts/
          # Add your custom distribution logic here, such as uploading to a server or app store.
